{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/workspace/nextjs-blog/pages/test/staticgeneration.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/layout';\nimport cheerio from 'cheerio';\nexport async function getStaticProps() {\n  const client_id = 'EY7anGhQqyrgDJU47GpY';\n  const client_secret = 'rIy5tA9HR4';\n  const api_url = 'https://openapi.naver.com/v1/search/blog?query=' + 'next.js'; // json 결과\n  //   var api_url = 'https://openapi.naver.com/v1/search/blog.xml?query=' + encodeURI(req.query.query); // xml 결과\n\n  const options = {\n    url: api_url,\n    headers: {\n      'X-Naver-Client-Id': client_id,\n      'X-Naver-Client-Secret': client_secret\n    }\n  };\n  const data = fetch(options, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      res.writeHead(200, {\n        'Content-Type': 'text/json;charset=utf-8'\n      });\n      res.end(body);\n      console.log(body);\n    } else {\n      res.status(response.statusCode).end();\n      console.log('error = ' + response.statusCode);\n    }\n  }); //const res1 = await fetch('https://www.naver.com/').then((res) => { return res.text()})\n\n  console.log(data);\n  const $ = cheerio.load(data); //const title = $('#ctitle').text()\n\n  const lastScraped = new Date().toISOString();\n  console.log(lastScraped); //console.log(title)\n\n  return {\n    props: {\n      lastScraped\n    },\n    revalidate: 10 // rerun after 10 seconds\n\n  };\n}\nexport default function PageStaticGeneration({\n  lastScraped\n}) {\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, lastScraped)));\n}","map":{"version":3,"sources":["/Users/apple/Documents/workspace/nextjs-blog/pages/test/staticgeneration.js"],"names":["Layout","cheerio","getStaticProps","client_id","client_secret","api_url","options","url","headers","data","fetch","error","response","body","statusCode","res","writeHead","end","console","log","status","$","load","lastScraped","Date","toISOString","props","revalidate","PageStaticGeneration"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAGA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,SAAS,GAAG,sBAAlB;AACA,QAAMC,aAAa,GAAG,YAAtB;AAEA,QAAMC,OAAO,GAAG,oDAAoD,SAApE,CALqC,CAK0C;AACjF;;AAEE,QAAMC,OAAO,GAAG;AACXC,IAAAA,GAAG,EAAEF,OADM;AAEXG,IAAAA,OAAO,EAAE;AAAC,2BAAoBL,SAArB;AAAgC,+BAAyBC;AAAzD;AAFE,GAAhB;AAIC,QAAMK,IAAI,GAAGC,KAAK,CAACJ,OAAD,EAAU,UAAUK,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC3D,QAAI,CAACF,KAAD,IAAUC,QAAQ,CAACE,UAAT,IAAuB,GAArC,EAA0C;AACxCC,MAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAC,wBAAgB;AAAjB,OAAnB;AACAD,MAAAA,GAAG,CAACE,GAAJ,CAAQJ,IAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD,KAJD,MAIO;AACLE,MAAAA,GAAG,CAACK,MAAJ,CAAWR,QAAQ,CAACE,UAApB,EAAgCG,GAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaP,QAAQ,CAACE,UAAlC;AACD;AACF,GATiB,CAAlB,CAZoC,CAuBrC;;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,QAAMY,CAAC,GAAGpB,OAAO,CAACqB,IAAR,CAAab,IAAb,CAAV,CA1BqC,CA2BrC;;AACA,QAAMc,WAAW,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAApB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ,EA7BqC,CA8BrC;;AACA,SAAO;AACLG,IAAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF,KADF;AAELI,IAAAA,UAAU,EAAE,EAFP,CAEW;;AAFX,GAAP;AAID;AACD,eAAe,SAASC,oBAAT,CAA8B;AAACL,EAAAA;AAAD,CAA9B,EAA6C;AACxD,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,WAAN,CADF,CADF,CADF;AAOD","sourcesContent":["import Layout from '../../components/layout'\nimport cheerio from 'cheerio'\n\n\nexport async function getStaticProps() {\n\n  const client_id = 'EY7anGhQqyrgDJU47GpY';\n  const client_secret = 'rIy5tA9HR4';\n\n  const api_url = 'https://openapi.naver.com/v1/search/blog?query=' + 'next.js'; // json 결과\n//   var api_url = 'https://openapi.naver.com/v1/search/blog.xml?query=' + encodeURI(req.query.query); // xml 결과\n  \n  const options = {\n       url: api_url,\n       headers: {'X-Naver-Client-Id':client_id, 'X-Naver-Client-Secret': client_secret}\n    };\n   const data = fetch(options, function (error, response, body) {\n     if (!error && response.statusCode == 200) {\n       res.writeHead(200, {'Content-Type': 'text/json;charset=utf-8'});\n       res.end(body);\n       console.log(body)\n     } else {\n       res.status(response.statusCode).end();\n       console.log('error = ' + response.statusCode);\n     }\n   });\n\n  //const res1 = await fetch('https://www.naver.com/').then((res) => { return res.text()})\n\n  console.log(data)\n  const $ = cheerio.load(data)\n  //const title = $('#ctitle').text()\n  const lastScraped = new Date().toISOString()\n  console.log(lastScraped)\n  //console.log(title)\n  return {\n    props: { lastScraped },\n    revalidate: 10, // rerun after 10 seconds\n  }\n}\nexport default function PageStaticGeneration({lastScraped}) {\n    return (\n      <>\n        <Layout>\n          <div>{lastScraped}</div>\n        </Layout>\n      </>\n    )\n  }"]},"metadata":{},"sourceType":"module"}